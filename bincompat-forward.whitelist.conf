filter {
  packages = [
    "scala.reflect.internal"
    # "scala.concurrent.impl"
    # "scala.reflect.runtime"
  ]
  problems=[
   # Scala Virtualized
    {
        matchName="scala.EmbeddedControls$Scope"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.ProxyControlsBase"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.EmbeddedControls$Struct"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.Predef$"
        problemName=MissingTypesProblem
    },
    {
        matchName="scala.Predef.__equal"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.Predef.__return"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.Predef.__assign"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.Predef.__doWhile"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.Predef.__ifThenElse"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.Predef.__newVar"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.Predef.__whileDo"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.ProxyControls"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.EmbeddedControls"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.ManifestFactory.refinedType"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.SourceLocation"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.ClassManifestFactory.refinedType"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.SourceContext"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.SourceLocation$"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.SourceLocation$ConcreteSourceLocation"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.SourceContext$"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.SourceContext$ConcreteSourceContext"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.RefinedManifest"
        problemName=MissingClassProblem
    }
    {
        matchName="scala.reflect.runtime.Settings.Yvirtualize"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.runtime.Settings.Yvirtualize"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.EmbeddedControls_newVar"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.EmbeddedControlsClass"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.EmbeddedControls_return"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.EmbeddedControls_doWhile"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.EmbeddedControls_new"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.EmbeddedControls_Scope"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.SourceContextModule"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.EmbeddedControls_assign"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.ProxyControlsClass"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.SourceLocationModule"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.SourceLocationClass"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.Symbol_result"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.EmbeddedControls_ifThenElse"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.EmbeddedControls_whileDo"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.SourceContextClass"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.EmbeddedControls_Struct"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Definitions#DefinitionsClass.EmbeddedControls_equal"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.SymbolTable.LiftedAssign"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.Trees.LiftedAssign"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.StdNames#TypeNames.Scope"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.StdNames#TypeNames.TransparentProxy"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.StdNames#TypeNames.Struct"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.StdNames#TermNames.result"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.StdNames#TermNames._doWhile"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.StdNames#TermNames._ifThenElse"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.StdNames#TermNames._newVar"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.StdNames#TermNames._new"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.StdNames#TermNames._whileDo"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.StdNames#TermNames._return"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.StdNames#TermNames._forward"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.StdNames#TermNames._equal"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.StdNames#TermNames._assign"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.internal.settings.MutableSettings.Yvirtualize"
        problemName=MissingMethodProblem
    }
    // see SI-8372
    {
        matchName="scala.collection.mutable.ArrayOps#ofChar.unzip"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofChar.unzip3"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofByte.unzip"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofByte.unzip3"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofShort.unzip"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofShort.unzip3"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofLong.unzip"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofLong.unzip3"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofInt.unzip"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofInt.unzip3"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps.unzip"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps.unzip3"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps.unzip"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps.unzip3"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofFloat.unzip"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofFloat.unzip3"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofBoolean.unzip"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofBoolean.unzip3"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofRef.unzip"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofRef.unzip3"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofUnit.unzip"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofUnit.unzip3"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofDouble.unzip"
        problemName=IncompatibleMethTypeProblem
    },
    {
        matchName="scala.collection.mutable.ArrayOps#ofDouble.unzip3"
        problemName=IncompatibleMethTypeProblem
    },
    // see SI-8200
    {
        matchName="scala.reflect.api.Liftables#Liftable.liftTree"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.StandardLiftables#StandardLiftableInstances.liftTree"
        problemName=MissingMethodProblem
    },
    // see SI-8331
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi.SyntacticSelectType"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi.SyntacticAppliedType"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi.SyntacticSelectTerm"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Internals$ReificationSupportApi$SyntacticSelectTermExtractor"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi#SyntacticTypeAppliedExtractor.unapply"
        problemName=IncompatibleResultTypeProblem
    },
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi#SyntacticTypeAppliedExtractor.unapply"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Internals$ReificationSupportApi$SyntacticSelectTypeExtractor"
        problemName=MissingClassProblem
    },
    // see SI-8366
    {
        matchName="scala.reflect.api.Internals$ReificationSupportApi$SyntacticPartialFunctionExtractor"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi.SyntacticPartialFunction"
        problemName=MissingMethodProblem
    },
    // see SI-8428
    {
        matchName="scala.collection.Iterator#ConcatIterator.this"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Mirror.symbolOf"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Mirror.typeOf"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Mirror.weakTypeOf"
        problemName=MissingMethodProblem
    },
    // see SI-8388
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi.SyntacticSingletonType"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi.SyntacticTermIdent"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi.SyntacticTypeIdent"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi.SyntacticCompoundType"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi.SyntacticAnnotatedType"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi.SyntacticTypeProjection"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi.SyntacticExistentialType"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Internals#ReificationSupportApi.SyntacticIdent"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.api.Internals$ReificationSupportApi$SyntacticAnnotatedTypeExtractor"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.api.Internals$ReificationSupportApi$SyntacticTermIdentExtractor"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.api.Internals$ReificationSupportApi$SyntacitcSingletonTypeExtractor"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.api.Internals$ReificationSupportApi$SyntacticTypeIdentExtractor"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.api.Internals$ReificationSupportApi$SyntacticCompoundTypeExtractor"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.api.Internals$ReificationSupportApi$SyntacticExistentialTypeExtractor"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.api.Internals$ReificationSupportApi$SyntacticTypeProjectionExtractor"
        problemName=MissingClassProblem
    },
    {
        matchName="scala.reflect.runtime.JavaMirrors#JavaMirror.scala$reflect$runtime$JavaMirrors$JavaMirror$$followStatic"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.runtime.SynchronizedOps.newNestedScope"
        problemName=MissingMethodProblem
    },
    {
        matchName="scala.reflect.runtime.JavaUniverse"
        problemName=MissingTypesProblem
    },
    {
        matchName="scala.reflect.runtime.JavaUniverse.reporter"
        problemName=MissingMethodProblem
    },
    {
       matchName="scala.reflect.runtime.JavaUniverse$PerRunReporting"
       problemName=MissingClassProblem
    },
    {
       matchName="scala.reflect.runtime.JavaUniverse.currentRun"
       problemName=MissingMethodProblem
    },
    {
       matchName="scala.reflect.runtime.JavaUniverse.PerRunReporting"
       problemName=MissingMethodProblem
    },
    // see SI-5919
    {
        matchName="scala.reflect.api.TypeTags$PredefTypeCreator"
        problemName=MissingTypesProblem
    },
    {
        matchName="scala.reflect.api.TreeCreator"
        problemName=MissingTypesProblem
    },
    {
        matchName="scala.reflect.api.TypeCreator"
        problemName=MissingTypesProblem
    },
    {
        matchName="scala.reflect.api.PredefTypeCreator"
        problemName=MissingClassProblem
    }
  ]
}
